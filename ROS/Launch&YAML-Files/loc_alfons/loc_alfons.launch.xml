<launch>
<!--Lidar--> 

  <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen" clear_params="true">
  <param name="serial_port"         type="string" value="/dev/ttyUSB0"/>
  <param name="serial_baudrate"     type="int"    value="115200"/><!-- A1/A2 -->
  <!--<param name="serial_baudrate"     type="int"    value="256000"/>--><!--A3 -->
  <param name="frame_id"            type="string" value="laser"/>
  <param name="inverted"            type="bool"   value="false"/>
  <param name="angle_compensate"    type="bool"   value="true"/>
  </node>

<!--ICP Odometry-->


 <node name="icp_odometry"  pkg="rtabmap_ros"  type="icp_odometry" clear_params="true">
  </node>


<!--Transforms-->


  <node pkg="tf" type="static_transform_publisher" name="base_k2laser" args="0 0 0 0 0 0 base_link laser 10"/>

  <node pkg="tf" type="static_transform_publisher" name="base_k1laser" args="0 0 0 0 0 0 base_link laser1 10"/>

  <!--<node pkg="tf" type="static_transform_publisher" name="base_linkmap" args="0 0 0 0 0 0 odom base_link 10"/>-->

  <node pkg="tf" type="static_transform_publisher" name="odom2_base_Frame" args="0.5 -0.26 0 0 0 0 odom base_frame 10"/> 
 
  <node pkg="tf" type="static_transform_publisher" name="base_link2camera_depth_frame" args="-0.27 -0.24 0 3.14 0 0 base_link cam_back 10"/>

  <node pkg="tf" type="static_transform_publisher" name="base_link2rgboptical" args="0.1 -0.24 0 0 0 0 base_link cam_front 10"/>

 <!-- <node pkg="tf" type="static_transform_publisher" name="map2odom" args="0 0 0 0 0 0 map odom 10"/>-->

<!--Hector SLAM-->

 <!--<node pkg="hector_mapping" type="hector_mapping" name="hector_slam" clear_params="true">
	<param name="pub_map_odom_transform"  value="false"/>
  </node>-->

<!--Rviz-->

  <node name="rviz"  pkg="rviz"  type="rviz">
    <remap from="robot_description" to="/joint_state_publisher/robot_description"/>

  </node>

<!--Navigation Stack-->
   
   <arg name="package"            default="loc_alfons"/>
   <master auto="start"/>

 <!-- Run the map server --> 
   <arg name="mpyaml" default="/home/alf/catkin_ws/devel/lib/loc_alfons/map_server.yaml"/>
   <node name="map_server" pkg="map_server" type="map_server" args="$(arg mpyaml)" clear_params="true">
  	 <param name="frame_id" type="string" value="map"/>
   </node>

<!--AMCL-->

  <arg name="use_map_topic" default="true"/>
  <arg name="scan_topic" default="/scan" />

  <node pkg="amcl" type="amcl" name="amcl">
    <param name="use_map_topic" value="$(arg use_map_topic)"/>
    <!-- Publish scans from best pose at a max of 10 Hz -->
    <param name="odom_model_type" value="omni"/>
	<param name="odom_alpha1" value="0.2"/>
	<param name="odom_alpha2" value="0.2"/>
	<param name="odom_alpha3" value="0.2"/>
	<param name="odom_alpha4" value="0.2"/>
    <param name="odom_alpha5" value="0.2"/>
    <param name="gui_publish_rate" value="-1"/>
    <param name="laser_max_beams" value="50"/>
    <param name="laser_min_range" value="0.1"/>
    <param name="laser_max_range" value="30.0"/>
    <param name="min_particles" value="500"/>
    <param name="max_particles" value="2000"/>
    <!-- Maximum error between the true distribution and the estimated distribution. -->
    <param name="kld_err" value="0.05"/>
    <param name="kld_z" value="0.99"/>
    <!-- translation std dev, m -->
    <param name="laser_z_hit" value="0.95"/>
    <param name="laser_z_short" value="0.1"/>
    <param name="laser_z_max" value="0.05"/>
    <param name="laser_z_rand" value="0.05"/>
    <param name="laser_sigma_hit" value="0.2"/>
    <param name="laser_lambda_short" value="0.1"/>
    <param name="laser_model_type" value="likelihood_field"/>
    <!-- Maximum distance to do obstacle inflation on map, for use in likelihood_field model. -->
    <param name="laser_likelihood_max_dist" value="2.0"/>
    <!-- Translational movement required before performing a filter update.  -->
    <param name="update_min_d" value="0.1"/>
    <!--Rotational movement required before performing a filter update. -->
    <param name="update_min_a" value="0.1"/>
    <param name="odom_frame_id" value="odom"/>
    <param name="base_frame_id" value="base_link"/>
    <param name="global_frame_id" value="map"/>
    <!-- Number of filter updates required before resampling. -->
    <param name="resample_interval" value="1"/>
    <!-- Increase tolerance because the computer can get quite busy -->
    <param name="transform_tolerance" value="0.1"/>
    <!-- Exponential decay rate for the slow average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.001. -->
    <param name="recovery_alpha_slow" value="0.0"/>
    <!--Exponential decay rate for the fast average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.1. -->
    <param name="recovery_alpha_fast" value="0.0"/>
    <!-- Initial pose mean -->
    <param name="initial_pose_x" value="0.0" />
    <param name="initial_pose_y" value="0.0" />
    <param name="initial_pose_a" value="0.0" />
    <!-- When set to true, AMCL will subscribe to the map topic rather than making a service call to receive its map.-->
    <param name="receive_map_topic" value="true"/>
    <!--  When set to true, AMCL will only use the first map it subscribes to, rather than updating each time a new one is received. -->
    <param name="first_map_only" value="false"/>
    <remap from="scan" to="$(arg scan_topic)"/>
  </node>         


<!--Kinects-->

<include file="/home/alf/catkin_ws/devel/lib/loc_alfons/kinect1_bridge_new.launch"/>
<include file="/home/alf/catkin_ws/devel/lib/loc_alfons/kinect2_bridge_new.launch"/>

<!--Depthimage to laser-->

 	<!--Kamera vorne-->


  <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan2">
    <remap from="image" to="kinect2/qhd/image_depth_rect"/>
    <param name="output_frame_id" type="string" value="cam_front"/>
    <remap from="camera_info" to="kinect2/qhd/camera_info"/>
    <remap from="scan" to="scan2"/>
	<param name="scan_height" type="int" value="900"/>
    <param name="range_max" type="double" value="1.80"/>
  </node>-->


	<!--Kamera hinten-->
	

  <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan1">
    <remap from="image" to="kinect1/qhd/image_depth_rect"/>
    <param name="output_frame_id" type="string" value="cam_back"/>
    <remap from="camera_info" to="kinect1/qhd/camera_info"/>
    <remap from="scan" to="scan1"/>
	<param name="scan_height" type="int" value="900"/>
	<param name="range_max" type="double" value="1.80"/>
  </node>-->

<!--Laser Merge-->

        <node pkg="ira_laser_tools" name="laserscan_multi_merger" type="laserscan_multi_merger" output="screen">
        <param name="destination_frame" value="laser1"/>
		<param name="cloud_destination_topic" value="/merged_cloud"/>
		<param name="scan_destination_topic" value="/scan_multi"/>
        <param name="laserscan_topics" value ="/scan /scan1 /scan2"/> <!-- LIST OF THE LASER SCAN TOPICS TO SUBSCRIBE -->

        <param name="angle_min" value="-3.14"/>
                <param name="angle_max" value="3.14"/>
                <param name="angle_increment" value="0.0058"/>
                <param name="scan_time" value="0.0333333"/>
                <param name="range_min" value="0.30"/>
                <param name="range_max" value="50.0"/>

	</node>




<!--Move_Base-->

   <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen" clear_params="true">
    <rosparam file="/home/alf/catkin_ws/devel/lib/loc_alfons/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="/home/alf/catkin_ws/devel/lib/$(arg package)/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="/home/alf/catkin_ws/devel/lib/$(arg package)/local_costmap_params.yaml" command="load" />
    <rosparam file="/home/alf/catkin_ws/devel/lib/$(arg package)/global_costmap_params.yaml" command="load" /> 
    <rosparam file="/home/alf/catkin_ws/devel/lib/$(arg package)/base_local_planner_params.yaml" command="load" />-->

    <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />
    <param name="controller_frequency" value="10.0" />
    </node>

</launch>
